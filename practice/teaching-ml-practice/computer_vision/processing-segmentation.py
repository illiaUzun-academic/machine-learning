import torch
import torchvision.transforms as T
from torchvision.models.segmentation import deeplabv3_resnet101
from PIL import Image
import matplotlib.pyplot as plt

# Завантаження попередньо навченої моделі DeepLabV3
model = deeplabv3_resnet101(pretrained=True)
model.eval()

# Давайте розглянемо приклад використання PyTorch для семантичної сегментації. Семантична сегментація відноситься до
# процесу присвоєння мітки кожному пікселю на зображенні, тим самим ділячи зображення на частини за класами об'єктів.
# Ми використаємо попередньо навчену модель DeepLabV3, яка є однією з провідних моделей для цієї задачі.

# Функція для обробки та візуалізації результатів сегментації
def segment_image(img_path):
    # Завантаження зображення
    img = Image.open(img_path)

    # Перетворення зображення для подачі в модель
    transform = T.Compose([
        T.Resize(256),
        T.CenterCrop(224),
        T.ToTensor(),
        T.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
    ])
    input_tensor = transform(img).unsqueeze(0)

    # Виконання сегментації
    with torch.no_grad():
        output = model(input_tensor)['out'][0]
    output_predictions = output.argmax(0)

    # Візуалізація результату
    plt.imshow(output_predictions.byte().cpu().numpy())
    plt.show()


# Використання функції
segment_image('test/happy_man.jpg')

# У цьому прикладі ми використовуємо модель DeepLabV3 з архітектурою ResNet101 для семантичної сегментації зображення.
# Модель була попередньо навчена на датасеті ImageNet. Спочатку ми завантажуємо зображення та перетворюємо його за
# допомогою серії трансформацій, щоб підготувати до подачі в модель. Після цього виконуємо сегментацію без розрахунку
# градієнтів (що в PyTorch робиться через контекст torch.no_grad()), отримуємо передбачення моделі та візуалізуємо результат.
# Результат показує, як модель класифікувала кожен піксель зображення.
#
# Цей код є відмінною основою для демонстрації можливостей семантичної сегментації, і ви можете адаптувати його до своїх потреб,
# змінюючи зображення або використовуючи інші моделі.